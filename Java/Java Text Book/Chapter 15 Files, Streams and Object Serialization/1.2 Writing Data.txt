/*
 This program shows off how one could use the Path class to gain acess 
 to a file or a directory, and then how you could extract extra information 
 out of the file or directory using the created path or the File class. 
*/
import java.io.FileNotFoundException;
import java.lang.SecurityException;
import java.util.Formatter;
import java.util.FormatterClosedException;
import java.util.NoSuchElementException;
import java.util.Scanner;

public class Main {
	
	private static Formatter output;
	
	public static void main(String [] args )
	{
		openFile();
		addRecords();
		closeFile();
	}
	
	
	public static void openFile()
	{
		//Creates a new file 
		try
		{
			output = new Formatter("clients.txt");
		}
		catch (SecurityException securityException)
		{
			System.err.println("Write permission denied. Terminating.");
			System.exit(1); // terminate the program
		}
		catch (FileNotFoundException fileNotFoundException)
		{
			System.err.println("Error opening file. Terminating.");
			System.exit(1); // terminate the program
		}
	}
	
	public static void addRecords()
	{
		Scanner input = new Scanner(System.in);
		System.out.printf("%s%n%s%n? ","Enter account number, first name, last name and balance.",
				"Enter end-of-file indicator to end input.");
		
		while (input.hasNext()) // loop until end-of-file indicator
			{
			try
			{
				output.format("%d %s %s %.2f%n", input.nextInt(),input.next(), input.next(), input.nextDouble());
			}
			
			catch (FormatterClosedException formatterClosedException)
			{
				System.err.println("Error writing to file. Terminating.");
				break;
			}
			
			catch (NoSuchElementException elementException)
			{
				System.err.println("Invalid input. Please try again.");
				input.nextLine(); // discard input so user can try again
			}
				
			System.out.print("? ");
		} 
	} 
				
	public static void closeFile()
	{
		if (output != null)
		{
			output.close();
			System.out.println("Closed");
		}
	}
}
