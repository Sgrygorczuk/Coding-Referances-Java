
import javax.swing.JPanel;
import java.awt.FlowLayout;
import java.awt.FlowLayout;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.ListSelectionModel;

public class Main extends JFrame {
	
	private final JList<String> colorJList;
	private static final String[] colorNames = {"Black", "Blue", "Cyan",
			"Dark Gray", "Gray", "Green", "Light Gray", "Magenta",
			"Orange", "Pink", "Red", "White", "Yellow"};
	private static final Color[] colors = {Color.BLACK, Color.BLUE,
			Color.CYAN, Color.DARK_GRAY, Color.GRAY, Color.GREEN,
			Color.LIGHT_GRAY, Color.MAGENTA, Color.ORANGE, Color.PINK,
			Color.RED, Color.WHITE, Color.YELLOW};
	
	public Main()
	{
		setLayout(new FlowLayout());
		
		colorJList =  new JList<String>(colorNames); //Sets a list of Colors
		colorJList.setVisibleRowCount(5); //Only see 5 rows at a time
	
		colorJList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //Only one choice at a time
		
		add(new JScrollPane(colorJList));
		
		/*
		A class that’s declared without a name
		and typically appears inside a method declaration. As with other inner classes, an anonymous
		inner class can access its top-level class’s members. However, an anonymous inner class has
		limited access to the local variables of the method in which it’s declared. Since an anonymous
		inner class has no name, one object of the class must be created at the point where
		the class is declared 
		*/
		
		colorJList.addListSelectionListener(new ListSelectionListener() // anonymous inner class
				 {
				 // handle list selection events
				 @Override
				 	public void valueChanged(ListSelectionEvent event)
				 	{
					 	getContentPane().setBackground(colors[colorJList.getSelectedIndex()]); //getContentPane is part of JFrame
				 	}
				 }
		);
		
	}
	public static void main(String [] args )
	{
		Main frame = new Main();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(400,400);
		frame.setVisible(true);
	}
}
